/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package scholastica;

import java.awt.*;
import java.sql.*;
import javax.swing.*;

/**
 *
 * @author x7000328
 */
public class RechercheAdulte extends javax.swing.JFrame {

    String idFenetre = "RechercheAdulte";
    String idFenetrePrec;
    int idPrec;
    
    /**
     * Creates new form RechercheAdulte
     */
    public RechercheAdulte() {
        initComponents();
    }
    
    public RechercheAdulte(String _idFenetrePrec) {
        idFenetrePrec = _idFenetrePrec;
        initComponents();
    }

    public RechercheAdulte(String _idFenetrePrec, int _idPrec) {
        idFenetrePrec = _idFenetrePrec;
        idPrec = _idPrec;
        initComponents();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labNom = new javax.swing.JLabel();
        tfNom = new javax.swing.JTextField();
        labPrenom = new javax.swing.JLabel();
        tfPrenom = new javax.swing.JTextField();
        butRechercher = new javax.swing.JButton();
        butReinitialiser = new javax.swing.JButton();
        butOuvrir = new javax.swing.JButton();
        butAccueil = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabResultat = new javax.swing.JTable();
        labMesResultat = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Recherche adulte");

        labNom.setText("Nom");

        labPrenom.setText("Prénom");
        labPrenom.setToolTipText("");

        butRechercher.setText("Rechercher");
        butRechercher.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butRechercherActionPerformed(evt);
            }
        });

        butReinitialiser.setText("Réinitialiser");
        butReinitialiser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butReinitialiserActionPerformed(evt);
            }
        });

        butOuvrir.setText("Sélectionner");
        butOuvrir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butOuvrirActionPerformed(evt);
            }
        });

        butAccueil.setText("Accueil");
        butAccueil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                butAccueilActionPerformed(evt);
            }
        });

        tabResultat.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Nom", "Prénom", "Profession"
            }
        ));
        jScrollPane1.setViewportView(tabResultat);

        labMesResultat.setForeground(new java.awt.Color(204, 0, 0));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(butRechercher)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(butReinitialiser))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labPrenom)
                                    .addComponent(labNom))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(tfNom)
                                    .addComponent(tfPrenom, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(butOuvrir)
                                .addGap(510, 510, 510)
                                .addComponent(butAccueil))
                            .addComponent(labMesResultat))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labNom)
                    .addComponent(tfNom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labPrenom)
                    .addComponent(tfPrenom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(butRechercher)
                    .addComponent(butReinitialiser))
                .addGap(18, 18, 18)
                .addComponent(labMesResultat)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 192, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(butAccueil)
                    .addComponent(butOuvrir))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void butRechercherActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butRechercherActionPerformed
        String nom = tfNom.getText();
        String prenom = tfPrenom.getText();
        
        if (nom.equals("") && prenom.equals("")) {
            JOptionPane jop = new JOptionPane();
            JOptionPane.showMessageDialog(null, "Il faut remplir au moins un champ.", "Erreur !", JOptionPane.ERROR_MESSAGE);
        }
        
        String sql = "select id_adulte, nom_adulte, prenom_adulte, profession from p1514568.Adulte where ";
        if (!nom.equals("")) { sql += "nom_adulte like '%" + nom + "%'"; }
        if ((!nom.equals("")) && (!prenom.equals(""))) { sql += " and "; }
        if (!prenom.equals("")) { sql += "prenom_adulte like '%" + prenom + "%'"; }
        
        System.out.println(sql);
        
        Base b = new Base();
        Connection conn = null;
        ResultSet res;
        Statement statement;
        b.connexionBD();
        conn = b.getConnect();

        try {
            statement = conn.createStatement();
            res = statement.executeQuery(sql);
            
            // on crée les en-têtes du tableau
            Object[] colonne = new Object[4];
            colonne[0] = "ID";
            colonne[1] = "Nom";
            colonne[2] = "Prénom";
            colonne[3] = "Profession";
            
            // on récupère le nombre de résultats pour créer l'objet + l'afficher
            res.last();
            int rowCount = res.getRow();
            Object[][] data = new Object[rowCount][4];
            
            // on revient au départ
            res.beforeFirst();
            int r = 0;

            // on remplit le tableau d'Object[][]
            while(res.next()){
                for(int c = 1 ; c <= 4; c++) {
                    data[r][c-1] = res.getObject(c);
                }
                r++;
            }
            
            res.close();
            statement.close();
            
            if (rowCount > 0) {
                tabResultat.setModel(new javax.swing.table.DefaultTableModel(data, colonne));
                labMesResultat.setText("La recherche a retourné "+rowCount+" résultat(s).");
            } else if (rowCount == 0) {
                tabResultat.setModel(new javax.swing.table.DefaultTableModel(new Object[][] { {null, null, null, null} }, colonne));
                labMesResultat.setText("La recherche n'a retourné aucun résultat.");
            }
        } catch (SQLException e) {
            System.out.println(e.getMessage());
        }
    }//GEN-LAST:event_butRechercherActionPerformed

    private void butReinitialiserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butReinitialiserActionPerformed
        tfNom.setText(null);
        tfPrenom.setText(null);
    }//GEN-LAST:event_butReinitialiserActionPerformed

    private void butOuvrirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butOuvrirActionPerformed
        // si 0 lignes sélectionnées erreur
        //si 2+ lignes sélectionnées erreur
        // si 1 ligne sélectionnée, ouvrir l'écran Adulte avec les infos ramenées
        int row = tabResultat.getSelectedRow();
        
        if (row == -1) {
            JOptionPane.showMessageDialog(null, "Il faut choisir un résultat de recherche.", "Erreur !", JOptionPane.ERROR_MESSAGE);
        } else if (idFenetrePrec.equals("CreationClasse")) {
            int id_adulte = (int)tabResultat.getValueAt(row,0);
            CreationAffectation f = new CreationAffectation(idFenetre, idPrec, id_adulte);
            f.setVisible(true); 
            dispose();        
        } else if (idFenetrePrec.equals("CreationEleve")) {
            int id_adulte = (int)tabResultat.getValueAt(row,0);
            CreationResponsabilite f = new CreationResponsabilite(idPrec, id_adulte);
            f.setVisible(true); 
            dispose();        
        } else {
            int id_adulte = (int)tabResultat.getValueAt(row,0);
            CreationAdulte f = new CreationAdulte(id_adulte);
            f.setVisible(true); 
            dispose();
        }
    }//GEN-LAST:event_butOuvrirActionPerformed

    private void butAccueilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_butAccueilActionPerformed
        Accueil f = new Accueil();
        f.setVisible(true);
        dispose();
    }//GEN-LAST:event_butAccueilActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RechercheAdulte.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RechercheAdulte.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RechercheAdulte.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RechercheAdulte.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RechercheAdulte().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton butAccueil;
    private javax.swing.JButton butOuvrir;
    private javax.swing.JButton butRechercher;
    private javax.swing.JButton butReinitialiser;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labMesResultat;
    private javax.swing.JLabel labNom;
    private javax.swing.JLabel labPrenom;
    private javax.swing.JTable tabResultat;
    private javax.swing.JTextField tfNom;
    private javax.swing.JTextField tfPrenom;
    // End of variables declaration//GEN-END:variables
}
